name: GH_CI
on:
  push:
    branches:
      - develop
      - master
  pull_request:
    branches:
      - develop
      - master

jobs:
  test_full:
    if: "github.repository == 'IAlibay/mdanalysis'"
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
        matrix:
          os: [ubuntu-latest, ]
          python-version: [3.6, 3.7, 3.8]
          run_type: [full, ]
          include:
            - name: macOS
              os: macOS-latest
              python-version: 3.6
              run_type: full
            - name: minimal-ubuntu
              os: ubuntu-latest
              python-version: 3.6
              run_type: min
    env:
      # TODO: fix weird skipped tests for gro/gms/trj/trz
      PYTEST_FLAGS: "--disable-pytest-warnings --durations=50 -rs"
      PYTEST_LIST: "testsuite/MDAnalysisTests"
      MAIN_CMD: "pytest -n2 ${PYTEST_LIST}"
      SETUP_CMD: "${PYTEST_FLAGS}"
      BUILD_CMD: "pip install -e package/ && (cd testsuite/ && python setup.py build)"
      CYTHON_TRACE_NOGIL: 1
      MPLBACKEND: agg
      MACOSX_DEPLOYMENT_TARGET: 10.9
      GH_OS: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: setup_osx
      if: startsWith(matrix.os, 'macOS')
      run: |
        export OS_NAME="osx"
        ulimit -S -n 2048
    
    - name: setup_linux
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        export OS_NAME="linux"

    - name: setup_miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        auto-update-conda: true
        channel-priority: flexible
        # channel clash even though you have the same definition..
        #channels: biobuilds, conda-forge
        add-pip-as-python-dependency: true
        # mamba currently causes a pip segfault on ubuntu, disabled for now
        #mamba-version: "*"
        architecture: x64
        environment-file: maintainer/test-envs/conda-${{ matrix.run_type }}.yaml
        activate-environment: mda-tests
    
    - name: check_setup
      run: |
        # Check OS
        echo "OS: ${OS_NAME}"
        # Check python
        which python
        which pip
        conda info
        # adequate tqdm installed, setup.py still overrides...
        conda list

    - name: install_hole
      if: contains(matrix.run_type, 'full')
      run: |
        bash ./maintainer/install_hole.sh ${OS_NAME} "${HOME}"
        HOLE_BINDIR=${HOME}/hole2/exe
        export PATH=${PATH}:${HOLE_BINDIR}

    - name: install_mda
      run: |
        eval $BUILD_CMD

    - name: run_tests
      run: |
        echo $MAIN_CMD $SETUP_CMD
        eval $MAIN_CMD $SETUP_CMD

    - name: the_end
      run: |
        echo "It's a legitimate strategy"
